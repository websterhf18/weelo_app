{"version":3,"sources":["coins.controller.ts"],"names":["coinsRepo","CoinsCacheRepo","coinsService","CoinsService","CoinsController","getCoins","console","log","message","Error"],"mappings":";;;;;;;;;;;;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,SAAS,4BAAG,IAAIC,0BAAJ,EAAH,CAAf;AAEA,IAAMC,YAAY,4BAAG,IAAIC,mBAAJ,CAAiBH,SAAjB,CAAH,CAAlB;;IAEaI,e;;;;;;;WAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEqBF,YAAY,CAACG,QAAb,EAFrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIQC,cAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6D,YAAMC,OAAnE;AAJR;AAAA,oBAKc,IAAIC,KAAJ,aALd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/**\n * @author Hugo Garcia\n * @description Controller of coins\n * @returns \n */\nimport { CoinsEntity } from \"@entity/coins.entity\";\nimport { CoinsService } from \"@usecases/coins.service\";\nimport { CoinsCacheRepo } from \"@repositories/coins.cache.repo\";\n//import { CoinsAxiosRepo } from \"@repositories/coins.axios.repo\";\n\nconst coinsRepo = new CoinsCacheRepo();\n//const coinsRepo = new CoinsAxiosRepo();\nconst coinsService = new CoinsService(coinsRepo);\n\nexport class CoinsController {\n    \n    async getCoins(): Promise<CoinsEntity[]> {\n        try {\n            return await coinsService.getCoins();\n        } catch (error) {\n            console.log('***** Error CoinsController -> getCoins *****', error.message);\n            throw new Error(error);\n        }\n    }\n}"]}