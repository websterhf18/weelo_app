{"version":3,"sources":["coinsSlice.ts"],"names":["coinsController","CoinsController","getCoinsRedux","dispatch","getCoins","data","setCoins","console","log","message","Error","coinsSlice","name","initialState","coins_list","reducers","state","action","payload","actions","reducer"],"mappings":";;;;;;;;;AAKA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,4BAAG,IAAIC,sBAAJ,EAAH,CAArB;;;AACO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;AAAA;AAAA,0BAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAERH,eAAe,CAACI,QAAhB,EAFQ;;AAAA;AAErBC,YAAAA,IAFqB;AAAA;AAAA;AAAA,8CAGrBF,QAAQ,CAACG,QAAQ,CAACD,IAAD,CAAT,CAHa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAK3BE,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,YAAMC,OAAnD;AAL2B;AAAA,kBAMrB,IAAIC,KAAJ,aANqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlC,CARM;;;AAUP,IAAMC,UAAU,4BAAG,0BAAY;AAC3BC,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GAFa;AAK3BC,EAAAA,QAAQ,EAAE;AACNT,IAAAA,QAAQ,EAAE,kBAACU,KAAD,EAAQC,MAAR,EAAmB;AAAA;AAAA;AACzBD,MAAAA,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACC,OAA1B;AACH;AAHK;AALiB,CAAZ,CAAH,CAAhB;;AAYO,qCAAqBP,UAAU,CAACQ,OAAhC;AAAA,IAAQb,QAAR,QAAQA,QAAR;;;eAEQK,UAAU,CAACS,O","sourcesContent":["/**\n * @author Hugo Garcia\n * @description Redux Slice Coins\n * @returns\n */\nimport { createSlice, Dispatch } from '@reduxjs/toolkit';\nimport { CoinsController } from '@controllers/coins.controller';\n\nconst coinsController = new CoinsController();\nexport const getCoinsRedux = () => async (dispatch: Dispatch) => {\n    try {\n        const data = await coinsController.getCoins();\n        await dispatch(setCoins(data));\n    } catch (error) {\n        console.log('*** getCoinsRedux Error: ****', error.message);\n        throw new Error(error);\n    }\n};\n\nconst coinsSlice = createSlice({\n    name: 'coins',\n    initialState: {\n        coins_list: []\n    },\n    reducers: {\n        setCoins: (state, action) => {\n            state.coins_list = action.payload;\n        }\n    },\n});\n\nexport const { setCoins } = coinsSlice.actions;\n\nexport default coinsSlice.reducer;\n"]}