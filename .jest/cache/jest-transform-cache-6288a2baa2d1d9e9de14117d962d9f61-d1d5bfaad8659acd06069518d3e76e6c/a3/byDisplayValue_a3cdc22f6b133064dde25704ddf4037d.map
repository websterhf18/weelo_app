{"version":3,"sources":["byDisplayValue.js"],"names":["Object","defineProperty","exports","value","queryByDisplayValue","queryAllByDisplayValue","getByDisplayValue","getAllByDisplayValue","findByDisplayValue","findAllByDisplayValue","_makeQueries","require","_filterNodeByType","_errors","getTextInputNodeByDisplayValue","node","TextInput","nodeValue","props","undefined","defaultValue","filterNodeByType","test","error","createLibraryNotSupportedError","instance","queryAllByDisplayValueFn","displayValue","findAll","getMultipleError","String","getMissingError","makeQueries","getBy","getAllBy","queryBy","findBy","findAllBy"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,iBAAR,GAA4BJ,OAAO,CAACK,oBAAR,GAA+BL,OAAO,CAACM,kBAAR,GAA6BN,OAAO,CAACO,qBAAR,GAAgC,KAAK,CAA5L;;AAEA,IAAIC,YAAY,GAAGC,OAAO,iBAA1B;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,sBAA/B;;AAEA,IAAIE,OAAO,GAAGF,OAAO,YAArB;;AAEA,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAOZ,KAAP,EAAiB;AACtD,MAAI;AACF,mBAEIQ,OAAO,CAAC,cAAD,CAFX;AAAA,QACEK,SADF,YACEA,SADF;;AAIA,QAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWf,KAAX,KAAqBgB,SAArB,GAAiCJ,IAAI,CAACG,KAAL,CAAWf,KAA5C,GAAoDY,IAAI,CAACG,KAAL,CAAWE,YAAjF;AACA,WAAO,CAAC,GAAGR,iBAAiB,CAACS,gBAAtB,EAAwCN,IAAxC,EAA8CC,SAA9C,MAA6D,OAAOb,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,KAAKc,SAAtC,GAAkDd,KAAK,CAACmB,IAAN,CAAWL,SAAX,CAA/G,CAAP;AACD,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAM,CAAC,GAAGV,OAAO,CAACW,8BAAZ,EAA4CD,KAA5C,CAAN;AACD;AACF,CAXD;;AAaA,IAAMlB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAoB,QAAQ;AAAA,SAAI,SAASC,wBAAT,CAAkCC,YAAlC,EAAgD;AACzF,WAAOF,QAAQ,CAACG,OAAT,CAAiB,UAAAb,IAAI;AAAA,aAAID,8BAA8B,CAACC,IAAD,EAAOY,YAAP,CAAlC;AAAA,KAArB,CAAP;AACD,GAFsC;AAAA,CAAvC;;AAIAzB,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAF,YAAY;AAAA,0DAAmDG,MAAM,CAACH,YAAD,CAAzD;AAAA,CAArC;;AAEA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,YAAY;AAAA,2DAAoDG,MAAM,CAACH,YAAD,CAA1D;AAAA,CAApC;;AAEA,WAMI,CAAC,GAAGjB,YAAY,CAACsB,WAAjB,EAA8B3B,sBAA9B,EAAsD0B,eAAtD,EAAuEF,gBAAvE,CANJ;AAAA,IACSvB,iBADT,QACE2B,KADF;AAAA,IAEY1B,oBAFZ,QAEE2B,QAFF;AAAA,IAGW9B,mBAHX,QAGE+B,OAHF;AAAA,IAIU3B,kBAJV,QAIE4B,MAJF;AAAA,IAKa3B,qBALb,QAKE4B,SALF;;AAOAnC,OAAO,CAACO,qBAAR,GAAgCA,qBAAhC;AACAP,OAAO,CAACM,kBAAR,GAA6BA,kBAA7B;AACAN,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACK,oBAAR,GAA+BA,oBAA/B;AACAL,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByDisplayValue = exports.queryAllByDisplayValue = exports.getByDisplayValue = exports.getAllByDisplayValue = exports.findByDisplayValue = exports.findAllByDisplayValue = void 0;\n\nvar _makeQueries = require(\"./makeQueries\");\n\nvar _filterNodeByType = require(\"./filterNodeByType\");\n\nvar _errors = require(\"./errors\");\n\nconst getTextInputNodeByDisplayValue = (node, value) => {\n  try {\n    const {\n      TextInput\n    } = require('react-native');\n\n    const nodeValue = node.props.value !== undefined ? node.props.value : node.props.defaultValue;\n    return (0, _filterNodeByType.filterNodeByType)(node, TextInput) && (typeof value === 'string' ? value === nodeValue : value.test(nodeValue));\n  } catch (error) {\n    throw (0, _errors.createLibraryNotSupportedError)(error);\n  }\n};\n\nconst queryAllByDisplayValue = instance => function queryAllByDisplayValueFn(displayValue) {\n  return instance.findAll(node => getTextInputNodeByDisplayValue(node, displayValue));\n};\n\nexports.queryAllByDisplayValue = queryAllByDisplayValue;\n\nconst getMultipleError = displayValue => `Found multiple elements with display value: ${String(displayValue)} `;\n\nconst getMissingError = displayValue => `Unable to find an element with displayValue: ${String(displayValue)}`;\n\nconst {\n  getBy: getByDisplayValue,\n  getAllBy: getAllByDisplayValue,\n  queryBy: queryByDisplayValue,\n  findBy: findByDisplayValue,\n  findAllBy: findAllByDisplayValue\n} = (0, _makeQueries.makeQueries)(queryAllByDisplayValue, getMissingError, getMultipleError);\nexports.findAllByDisplayValue = findAllByDisplayValue;\nexports.findByDisplayValue = findByDisplayValue;\nexports.queryByDisplayValue = queryByDisplayValue;\nexports.getAllByDisplayValue = getAllByDisplayValue;\nexports.getByDisplayValue = getByDisplayValue;"]}