319e484b9c82c847e2939fbc5877def3
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendMessageSnackbar = void 0;

var _reactNativeSnackbar = _interopRequireDefault(require("react-native-snackbar"));

function cov_onc52lqnq() {
  var path = "/Users/Mac/Desktop/weelo_app/src/data/utils/message.ts";
  var hash = "d4923750aadeb0a1882131aea9371e0f6a759c83";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/Mac/Desktop/weelo_app/src/data/utils/message.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 35
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "2": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 19,
          column: 15
        }
      },
      "3": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 18
        }
      },
      "4": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "5": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "6": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "7": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 18
        }
      },
      "8": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "9": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 35
          },
          end: {
            line: 7,
            column: 36
          }
        },
        loc: {
          start: {
            line: 7,
            column: 89
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 30
          }
        },
        loc: {
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 38
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 30
          }
        },
        loc: {
          start: {
            line: 41,
            column: 35
          },
          end: {
            line: 41,
            column: 38
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 53,
            column: 30
          }
        },
        loc: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 53,
            column: 38
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 20,
            column: 18
          }
        }, {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 32,
            column: 18
          }
        }, {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 44,
            column: 18
          }
        }, {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 56,
            column: 18
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4923750aadeb0a1882131aea9371e0f6a759c83"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_onc52lqnq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_onc52lqnq();
cov_onc52lqnq().s[0]++;

var sendMessageSnackbar = function sendMessageSnackbar(title, variant, duration) {
  cov_onc52lqnq().f[0]++;
  cov_onc52lqnq().s[1]++;

  switch (variant) {
    case 'success':
      cov_onc52lqnq().b[0][0]++;
      cov_onc52lqnq().s[2]++;

      _reactNativeSnackbar.default.show({
        text: title,
        duration: duration,
        backgroundColor: '#49A744',
        action: {
          text: 'OK',
          textColor: 'white',
          onPress: function onPress() {
            cov_onc52lqnq().f[1]++;
          }
        }
      });

      cov_onc52lqnq().s[3]++;
      break;

    case 'warn':
      cov_onc52lqnq().b[0][1]++;
      cov_onc52lqnq().s[4]++;

      _reactNativeSnackbar.default.show({
        text: title,
        duration: duration,
        backgroundColor: '#ffb300',
        action: {
          text: 'OK',
          textColor: 'white',
          onPress: function onPress() {
            cov_onc52lqnq().f[2]++;
          }
        }
      });

      cov_onc52lqnq().s[5]++;
      break;

    case 'error':
      cov_onc52lqnq().b[0][2]++;
      cov_onc52lqnq().s[6]++;

      _reactNativeSnackbar.default.show({
        text: title,
        duration: duration,
        backgroundColor: '#ff0000',
        action: {
          text: 'OK',
          textColor: 'white',
          onPress: function onPress() {
            cov_onc52lqnq().f[3]++;
          }
        }
      });

      cov_onc52lqnq().s[7]++;
      break;

    default:
      cov_onc52lqnq().b[0][3]++;
      cov_onc52lqnq().s[8]++;

      _reactNativeSnackbar.default.show({
        text: title,
        duration: duration,
        action: {
          text: 'OK',
          textColor: 'white',
          onPress: function onPress() {
            cov_onc52lqnq().f[4]++;
          }
        }
      });

      cov_onc52lqnq().s[9]++;
      break;
  }
};

exports.sendMessageSnackbar = sendMessageSnackbar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UudHMiXSwibmFtZXMiOlsic2VuZE1lc3NhZ2VTbmFja2JhciIsInRpdGxlIiwidmFyaWFudCIsImR1cmF0aW9uIiwiU25hY2tiYXIiLCJzaG93IiwidGV4dCIsImJhY2tncm91bmRDb2xvciIsImFjdGlvbiIsInRleHRDb2xvciIsIm9uUHJlc3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDTyxJQUFNQSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUNDLEtBQUQsRUFBZ0JDLE9BQWhCLEVBQWlDQyxRQUFqQyxFQUFzRDtBQUFBO0FBQUE7O0FBQ3JGLFVBQVFELE9BQVI7QUFDSSxTQUFLLFNBQUw7QUFBQTtBQUFBOztBQUNJRSxtQ0FBU0MsSUFBVCxDQUFjO0FBQ1ZDLFFBQUFBLElBQUksRUFBRUwsS0FESTtBQUVWRSxRQUFBQSxRQUFRLEVBQUVBLFFBRkE7QUFHVkksUUFBQUEsZUFBZSxFQUFFLFNBSFA7QUFJVkMsUUFBQUEsTUFBTSxFQUFFO0FBQ0pGLFVBQUFBLElBQUksRUFBRSxJQURGO0FBRUpHLFVBQUFBLFNBQVMsRUFBRSxPQUZQO0FBR0pDLFVBQUFBLE9BQU8sRUFBRSxtQkFBTTtBQUFBO0FBQUc7QUFIZDtBQUpFLE9BQWQ7O0FBREo7QUFXSTs7QUFDSixTQUFLLE1BQUw7QUFBQTtBQUFBOztBQUNJTixtQ0FBU0MsSUFBVCxDQUFjO0FBQ1ZDLFFBQUFBLElBQUksRUFBRUwsS0FESTtBQUVWRSxRQUFBQSxRQUFRLEVBQUVBLFFBRkE7QUFHVkksUUFBQUEsZUFBZSxFQUFFLFNBSFA7QUFJVkMsUUFBQUEsTUFBTSxFQUFFO0FBQ0pGLFVBQUFBLElBQUksRUFBRSxJQURGO0FBRUpHLFVBQUFBLFNBQVMsRUFBRSxPQUZQO0FBR0pDLFVBQUFBLE9BQU8sRUFBRSxtQkFBTTtBQUFBO0FBQUc7QUFIZDtBQUpFLE9BQWQ7O0FBREo7QUFXSTs7QUFDSixTQUFLLE9BQUw7QUFBQTtBQUFBOztBQUNJTixtQ0FBU0MsSUFBVCxDQUFjO0FBQ1ZDLFFBQUFBLElBQUksRUFBRUwsS0FESTtBQUVWRSxRQUFBQSxRQUFRLEVBQUVBLFFBRkE7QUFHVkksUUFBQUEsZUFBZSxFQUFFLFNBSFA7QUFJVkMsUUFBQUEsTUFBTSxFQUFFO0FBQ0pGLFVBQUFBLElBQUksRUFBRSxJQURGO0FBRUpHLFVBQUFBLFNBQVMsRUFBRSxPQUZQO0FBR0pDLFVBQUFBLE9BQU8sRUFBRSxtQkFBTTtBQUFBO0FBQUc7QUFIZDtBQUpFLE9BQWQ7O0FBREo7QUFXSTs7QUFFSjtBQUFBO0FBQUE7O0FBQ0lOLG1DQUFTQyxJQUFULENBQWM7QUFDVkMsUUFBQUEsSUFBSSxFQUFFTCxLQURJO0FBRVZFLFFBQUFBLFFBQVEsRUFBRUEsUUFGQTtBQUdWSyxRQUFBQSxNQUFNLEVBQUU7QUFDSkYsVUFBQUEsSUFBSSxFQUFFLElBREY7QUFFSkcsVUFBQUEsU0FBUyxFQUFFLE9BRlA7QUFHSkMsVUFBQUEsT0FBTyxFQUFFLG1CQUFNO0FBQUE7QUFBRztBQUhkO0FBSEUsT0FBZDs7QUFESjtBQVVJO0FBaERSO0FBa0RILENBbkRNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIEh1Z28gR2FyY2lhXG4gKiBAZGVzY3JpcHRpb24gRnVuY3Rpb24gdG8gcHV0IFNuYWNrYmFyIG1lc3NhZ2VcbiAqIEByZXR1cm5zIFxuICovXG5pbXBvcnQgU25hY2tiYXIgZnJvbSAncmVhY3QtbmF0aXZlLXNuYWNrYmFyJztcbmV4cG9ydCBjb25zdCBzZW5kTWVzc2FnZVNuYWNrYmFyID0gKHRpdGxlOiBzdHJpbmcsIHZhcmlhbnQ6IHN0cmluZywgZHVyYXRpb246IG51bWJlcikgPT4ge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgICAgIFNuYWNrYmFyLnNob3coe1xuICAgICAgICAgICAgICAgIHRleHQ6IHRpdGxlLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNDlBNzQ0JyxcbiAgICAgICAgICAgICAgICBhY3Rpb246IHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ09LJyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dENvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBvblByZXNzOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgU25hY2tiYXIuc2hvdyh7XG4gICAgICAgICAgICAgICAgdGV4dDogdGl0bGUsXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmIzMDAnLFxuICAgICAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIG9uUHJlc3M6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgU25hY2tiYXIuc2hvdyh7XG4gICAgICAgICAgICAgICAgdGV4dDogdGl0bGUsXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZjAwMDAnLFxuICAgICAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIG9uUHJlc3M6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgU25hY2tiYXIuc2hvdyh7XG4gICAgICAgICAgICAgICAgdGV4dDogdGl0bGUsXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIG9uUHJlc3M6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG59Il19