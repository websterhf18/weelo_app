76d1506225c74eca3db6c13a5609b736
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _reactNativeSafeAreaContext = require("react-native-safe-area-context");

var _immutable = require("immutable");

var _useConfigTheme = _interopRequireDefault(require("../../../data/hooks/useConfigTheme"));

var _HeaderBack = _interopRequireDefault(require("../../components/HeaderBack/HeaderBack"));

var _styles = _interopRequireDefault(require("./styles"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_13mkdy27br() {
  var path = "/Users/Mac/Desktop/weelo_app/src/presentation/screens/Detail/Detail.tsx";
  var hash = "b876125ed448854ada4a4301db7ad003518f5ffd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/Mac/Desktop/weelo_app/src/presentation/screens/Detail/Detail.tsx",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 47
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "1": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 44
        }
      },
      "2": {
        start: {
          line: 29,
          column: 19
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "3": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "4": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "5": {
        start: {
          line: 35,
          column: 48
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "6": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "7": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "8": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "9": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "10": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 52,
          column: 27
        }
      },
      "12": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "13": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "14": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "15": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 37
        }
      },
      "16": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "17": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 48
          }
        },
        loc: {
          start: {
            line: 27,
            column: 58
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 14
          },
          end: {
            line: 37,
            column: 15
          }
        },
        loc: {
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "fetch",
        decl: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 28
          }
        },
        loc: {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 14
          },
          end: {
            line: 49,
            column: 15
          }
        },
        loc: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 22
          },
          end: {
            line: 54,
            column: 23
          }
        },
        loc: {
          start: {
            line: 54,
            column: 34
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 84
          }
        }, {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 84,
            column: 21
          }
        }],
        line: 75
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b876125ed448854ada4a4301db7ad003518f5ffd"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_13mkdy27br = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_13mkdy27br();
cov_13mkdy27br().s[0]++;

var Detail = function Detail(props) {
  var _props$route$params, _props$route$params$i, _props$route$params$i2;

  cov_13mkdy27br().f[0]++;

  var _ref = (cov_13mkdy27br().s[1]++, (0, _useConfigTheme.default)()),
      configTheme = _ref.configTheme;

  var styles = (cov_13mkdy27br().s[2]++, (0, _styles.default)(configTheme));
  var dispatch = (cov_13mkdy27br().s[3]++, (0, _reactRedux.useDispatch)());

  var _ref2 = (cov_13mkdy27br().s[4]++, (0, _react.useState)((0, _immutable.fromJS)([]))),
      _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
      data = _ref3[0],
      setData = _ref3[1];

  var _ref4 = (cov_13mkdy27br().s[5]++, (0, _react.useState)(true)),
      _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
      loadingRefresh = _ref5[0],
      setLoadingRefresh = _ref5[1];

  cov_13mkdy27br().s[6]++;
  (0, _react.useEffect)(function () {
    cov_13mkdy27br().f[1]++;

    function fetch() {
      return _regenerator.default.async(function fetch$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cov_13mkdy27br().f[2]++;
              cov_13mkdy27br().s[7]++;

              try {
                cov_13mkdy27br().s[8]++;
                setLoadingRefresh(false);
              } catch (error) {
                cov_13mkdy27br().s[9]++;
                console.log('**** ERROR in View *****', error);
              }

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, null, Promise);
    }

    cov_13mkdy27br().s[10]++;
    fetch();
  }, []);
  cov_13mkdy27br().s[11]++;
  (0, _react.useEffect)(function () {
    cov_13mkdy27br().f[3]++;
  }, []);
  cov_13mkdy27br().s[12]++;

  var onRefresh = function onRefresh() {
    return _regenerator.default.async(function onRefresh$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            cov_13mkdy27br().f[4]++;
            cov_13mkdy27br().s[13]++;

            try {
              cov_13mkdy27br().s[14]++;
              setLoadingRefresh(true);
              cov_13mkdy27br().s[15]++;
              setLoadingRefresh(false);
            } catch (error) {
              cov_13mkdy27br().s[16]++;
              setLoadingRefresh(false);
            }

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  };

  cov_13mkdy27br().s[17]++;
  return _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaView, {
    style: styles.container
  }, _react.default.createElement(_HeaderBack.default, {
    routerBack: "Coins",
    title: (_props$route$params = props.route.params) == null ? void 0 : (_props$route$params$i = _props$route$params.item) == null ? void 0 : (_props$route$params$i2 = _props$route$params$i.data) == null ? void 0 : _props$route$params$i2.nombre,
    onPress: props.navigation.goBack
  }), loadingRefresh ? (cov_13mkdy27br().b[0][0]++, _react.default.createElement(_reactNative.ActivityIndicator, {
    color: "black",
    size: 30,
    style: {
      margin: 20
    }
  })) : (cov_13mkdy27br().b[0][1]++, {}));
};

var _default = Detail;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRldGFpbC50c3giXSwibmFtZXMiOlsiRGV0YWlsIiwicHJvcHMiLCJjb25maWdUaGVtZSIsInN0eWxlcyIsImRpc3BhdGNoIiwiZGF0YSIsInNldERhdGEiLCJsb2FkaW5nUmVmcmVzaCIsInNldExvYWRpbmdSZWZyZXNoIiwiZmV0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJvblJlZnJlc2giLCJjb250YWluZXIiLCJyb3V0ZSIsInBhcmFtcyIsIml0ZW0iLCJub21icmUiLCJuYXZpZ2F0aW9uIiwiZ29CYWNrIiwibWFyZ2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUtBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUtBOztBQUdBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT0EsSUFBTUEsTUFBc0MsR0FBRyxTQUF6Q0EsTUFBeUMsQ0FBQ0MsS0FBRCxFQUFXO0FBQUE7O0FBQUE7O0FBQ3RELHVDQUF3Qiw4QkFBeEI7QUFBQSxNQUFRQyxXQUFSLFFBQVFBLFdBQVI7O0FBQ0EsTUFBTUMsTUFBTSw2QkFBRyxxQkFBVUQsV0FBVixDQUFILENBQVo7QUFFQSxNQUFNRSxRQUFRLDZCQUFHLDhCQUFILENBQWQ7O0FBR0Esd0NBQXdCLHFCQUFTLHVCQUFPLEVBQVAsQ0FBVCxDQUF4QjtBQUFBO0FBQUEsTUFBT0MsSUFBUDtBQUFBLE1BQWFDLE9BQWI7O0FBQ0Esd0NBQTRDLHFCQUFTLElBQVQsQ0FBNUM7QUFBQTtBQUFBLE1BQU9DLGNBQVA7QUFBQSxNQUF1QkMsaUJBQXZCOztBQVJzRDtBQVV0RCx3QkFBVSxZQUFNO0FBQUE7O0FBQ1osYUFBZUMsS0FBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDSSxrQkFBSTtBQUFBO0FBRUFELGdCQUFBQSxpQkFBaUIsQ0FBQyxLQUFELENBQWpCO0FBQ0gsZUFIRCxDQUdFLE9BQU9FLEtBQVAsRUFBYztBQUFBO0FBQ1pDLGdCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q0YsS0FBeEM7QUFDSDs7QUFOTDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFEWTtBQVNaRCxJQUFBQSxLQUFLO0FBQ1IsR0FWRCxFQVVHLEVBVkg7QUFWc0Q7QUFzQnRELHdCQUFVLFlBQU07QUFBQTtBQUdmLEdBSEQsRUFHRyxFQUhIO0FBdEJzRDs7QUEyQnRELE1BQU1JLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNkLGdCQUFJO0FBQUE7QUFDQUwsY0FBQUEsaUJBQWlCLENBQUMsSUFBRCxDQUFqQjtBQURBO0FBR0FBLGNBQUFBLGlCQUFpQixDQUFDLEtBQUQsQ0FBakI7QUFDSCxhQUpELENBSUUsT0FBT0UsS0FBUCxFQUFjO0FBQUE7QUFDWkYsY0FBQUEsaUJBQWlCLENBQUMsS0FBRCxDQUFqQjtBQUNIOztBQVBhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWxCOztBQTNCc0Q7QUF5Q3RELFNBQ0ksNkJBQUMsd0NBQUQ7QUFBYyxJQUFBLEtBQUssRUFBRUwsTUFBTSxDQUFDVztBQUE1QixLQUNJLDZCQUFDLG1CQUFEO0FBQ0ksSUFBQSxVQUFVLEVBQUMsT0FEZjtBQUVJLElBQUEsS0FBSyx5QkFBRWIsS0FBSyxDQUFDYyxLQUFOLENBQVlDLE1BQWQsOENBQUUsb0JBQW9CQyxJQUF0QiwrQ0FBRSxzQkFBMEJaLElBQTVCLHFCQUFFLHVCQUFnQ2EsTUFGM0M7QUFHSSxJQUFBLE9BQU8sRUFBRWpCLEtBQUssQ0FBQ2tCLFVBQU4sQ0FBaUJDO0FBSDlCLElBREosRUFNS2IsY0FBYyxnQ0FDWCw2QkFBQyw4QkFBRDtBQUFtQixJQUFBLEtBQUssRUFBQyxPQUF6QjtBQUFpQyxJQUFBLElBQUksRUFBRSxFQUF2QztBQUEyQyxJQUFBLEtBQUssRUFBRTtBQUFFYyxNQUFBQSxNQUFNLEVBQUU7QUFBVjtBQUFsRCxJQURXLGlDQUdYLEVBSFcsQ0FObkIsQ0FESjtBQXFCSCxDQTlERDs7ZUFnRWVyQixNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIEh1Z28gR2FyY2lhXG4gKiBAZGVzY3JpcHRpb24gRGV0YWlsIFNjcmVlblxuICogQHJldHVybnMgXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgU2FmZUFyZWFWaWV3IH0gZnJvbSAncmVhY3QtbmF0aXZlLXNhZmUtYXJlYS1jb250ZXh0JztcbmltcG9ydCB7IGZyb21KUywgTWFwIGFzIEltbXV0YWJsZU1hcCB9IGZyb20gJ2ltbXV0YWJsZSc7XG5cbmltcG9ydCB1c2VDb25maWdUaGVtZSBmcm9tICdAaG9va3MvdXNlQ29uZmlnVGhlbWUnO1xuXG5pbXBvcnQgeyBTbGljZXNEZXRhaWwgfSBmcm9tICdAbmF2aWdhdGlvbi9pbnRlcmZhY2VJbmplY3QnO1xuXG5pbXBvcnQgTGlzdCBmcm9tICdAY29tcG9uZW50cy9MaXN0L0xpc3QnO1xuaW1wb3J0IEhlYWRlckJhY2sgZnJvbSAnQGNvbXBvbmVudHMvSGVhZGVyQmFjay9IZWFkZXJCYWNrJztcbmltcG9ydCBSZW5kZXJJdGVtRGV0YWlsIGZyb20gJ0Bjb21wb25lbnRzL1JlbmRlckl0ZW1EZXRhaWwvUmVuZGVySXRlbURldGFpbCc7XG5cbmltcG9ydCB1c2VTdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xuaW1wb3J0IHsgQWN0aXZpdHlJbmRpY2F0b3IgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICAgIG5hdmlnYXRpb246IGFueTtcbiAgICByb3V0ZTogYW55O1xufVxuXG5jb25zdCBEZXRhaWw6IFJlYWN0LkZDPFByb3BzICYgU2xpY2VzRGV0YWlsPiA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgY29uZmlnVGhlbWUgfSA9IHVzZUNvbmZpZ1RoZW1lKCk7XG4gICAgY29uc3Qgc3R5bGVzID0gdXNlU3R5bGVzKGNvbmZpZ1RoZW1lKTtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKVxuICAgIC8vY29uc3Qgc2VyaWVzUmVkdXggPSB1c2VTZWxlY3RvcigoeyBpbmRpY2Fkb3JlcyB9OiB7IGluZGljYWRvcmVzOiBhbnkgfSkgPT4gaW5kaWNhZG9yZXMuc2VyaWVzKTtcblxuICAgIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKGZyb21KUyhbXSkpO1xuICAgIGNvbnN0IFtsb2FkaW5nUmVmcmVzaCwgc2V0TG9hZGluZ1JlZnJlc2hdID0gdXNlU3RhdGUodHJ1ZSlcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvL2F3YWl0IGRpc3BhdGNoKHByb3BzLmdldEluZGljYWRvcmVzQnlUeXBlUmVkdXgocHJvcHMucm91dGUucGFyYW1zPy5pdGVtLm5hbWUpKTtcbiAgICAgICAgICAgICAgICBzZXRMb2FkaW5nUmVmcmVzaChmYWxzZSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcqKioqIEVSUk9SIGluIFZpZXcgKioqKionLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZmV0Y2goKVxuICAgIH0sIFtdKVxuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnc2VyaWVzUmVkdXgnLCBzZXJpZXNSZWR1eClcbiAgICAgICAgLy9zZXREYXRhKGZyb21KUyhzZXJpZXNSZWR1eCkpXG4gICAgfSwgWy8qKnNlcmllc1JlZHV4KiovXSlcblxuICAgIGNvbnN0IG9uUmVmcmVzaCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHNldExvYWRpbmdSZWZyZXNoKHRydWUpO1xuICAgICAgICAgICAgLy9hd2FpdCBkaXNwYXRjaChwcm9wcy5nZXRJbmRpY2Fkb3Jlc0J5VHlwZVJlZHV4KHByb3BzLnJvdXRlLnBhcmFtcz8uaXRlbS5uYW1lKSlcbiAgICAgICAgICAgIHNldExvYWRpbmdSZWZyZXNoKGZhbHNlKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHNldExvYWRpbmdSZWZyZXNoKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKmNvbnN0IHJlbmRlckl0ZW0gPSAoeyBpdGVtLCBpbmRleCB9OiB7IGl0ZW06IEltbXV0YWJsZU1hcDxzdHJpbmcsIGFueT4sIGluZGV4OiBudW1iZXIgfSkgPT4gKFxuICAgICAgICA8UmVuZGVySXRlbURldGFpbCBpdGVtPXtpdGVtfSAvPlxuICAgICkqKi9cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxTYWZlQXJlYVZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICAgICAgPEhlYWRlckJhY2tcbiAgICAgICAgICAgICAgICByb3V0ZXJCYWNrPSdDb2lucydcbiAgICAgICAgICAgICAgICB0aXRsZT17cHJvcHMucm91dGUucGFyYW1zPy5pdGVtPy5kYXRhPy5ub21icmV9XG4gICAgICAgICAgICAgICAgb25QcmVzcz17cHJvcHMubmF2aWdhdGlvbi5nb0JhY2t9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge2xvYWRpbmdSZWZyZXNoID8gKFxuICAgICAgICAgICAgICAgIDxBY3Rpdml0eUluZGljYXRvciBjb2xvcj0nYmxhY2snIHNpemU9ezMwfSBzdHlsZT17eyBtYXJnaW46IDIwIH19IC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIHsvKiogPExpc3RcbiAgICAgICAgICAgICAgICAgICAgZGF0YVNvdXJjZT17ZGF0YX1cbiAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhPXtmcm9tSlMoc2VyaWVzUmVkdXgpfVxuICAgICAgICAgICAgICAgICAgICByZW5kZXJJdGVtPXtyZW5kZXJJdGVtfVxuICAgICAgICAgICAgICAgICAgICByZWZyZXNoaW5nPXtsb2FkaW5nUmVmcmVzaH1cbiAgICAgICAgICAgICAgICAgICAgb25SZWZyZXNoPXtvblJlZnJlc2h9XG4gICAgICAgICAgICAgICAgLz4qL31cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgPC9TYWZlQXJlYVZpZXc+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBEZXRhaWw7XG4iXX0=