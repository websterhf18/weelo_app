67c05287120c15e56848323275b6d360
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
exports["default"] = void 0;

var _bindActionCreators = _interopRequireDefault(require("../utils/bindActionCreators"));

var _wrapMapToProps = require("./wrapMapToProps");

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return (0, _bindActionCreators["default"])(mapDispatchToProps, dispatch);
  }) : undefined;
}

var _default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcERpc3BhdGNoVG9Qcm9wcy5qcyJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwid2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24iLCJ3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nIiwid2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0IiwiX2JpbmRBY3Rpb25DcmVhdG9ycyIsIl93cmFwTWFwVG9Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsIndyYXBNYXBUb1Byb3BzRnVuYyIsInVuZGVmaW5lZCIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJkaXNwYXRjaCIsIl9kZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhDQUFELENBQXBDOztBQUVBQyxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxnQ0FBUixHQUEyQ0EsZ0NBQTNDO0FBQ0FGLE9BQU8sQ0FBQ0csK0JBQVIsR0FBMENBLCtCQUExQztBQUNBSCxPQUFPLENBQUNJLDhCQUFSLEdBQXlDQSw4QkFBekM7QUFDQUosT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQixLQUFLLENBQTFCOztBQUVBLElBQUlLLG1CQUFtQixHQUFHUCxzQkFBc0IsQ0FBQ0MsT0FBTywrQkFBUixDQUFoRDs7QUFFQSxJQUFJTyxlQUFlLEdBQUdQLE9BQU8sb0JBQTdCOztBQUVBLFNBQVNHLGdDQUFULENBQTBDSyxrQkFBMUMsRUFBOEQ7QUFDNUQsU0FBTyxPQUFPQSxrQkFBUCxLQUE4QixVQUE5QixHQUEyQyxDQUFDLEdBQUdELGVBQWUsQ0FBQ0Usa0JBQXBCLEVBQXdDRCxrQkFBeEMsRUFBNEQsb0JBQTVELENBQTNDLEdBQStIRSxTQUF0STtBQUNEOztBQUVELFNBQVNOLCtCQUFULENBQXlDSSxrQkFBekMsRUFBNkQ7QUFDM0QsU0FBTyxDQUFDQSxrQkFBRCxHQUFzQixDQUFDLEdBQUdELGVBQWUsQ0FBQ0ksc0JBQXBCLEVBQTRDLFVBQVVDLFFBQVYsRUFBb0I7QUFDM0YsV0FBTztBQUNMQSxNQUFBQSxRQUFRLEVBQUVBO0FBREwsS0FBUDtBQUdELEdBSjRCLENBQXRCLEdBSUZGLFNBSkw7QUFLRDs7QUFFRCxTQUFTTCw4QkFBVCxDQUF3Q0csa0JBQXhDLEVBQTREO0FBQzFELFNBQU9BLGtCQUFrQixJQUFJLE9BQU9BLGtCQUFQLEtBQThCLFFBQXBELEdBQStELENBQUMsR0FBR0QsZUFBZSxDQUFDSSxzQkFBcEIsRUFBNEMsVUFBVUMsUUFBVixFQUFvQjtBQUNwSSxXQUFPLENBQUMsR0FBR04sbUJBQW1CLENBQUMsU0FBRCxDQUF2QixFQUFvQ0Usa0JBQXBDLEVBQXdESSxRQUF4RCxDQUFQO0FBQ0QsR0FGcUUsQ0FBL0QsR0FFRkYsU0FGTDtBQUdEOztBQUVELElBQUlHLFFBQVEsR0FBRyxDQUFDVixnQ0FBRCxFQUFtQ0MsK0JBQW5DLEVBQW9FQyw4QkFBcEUsQ0FBZjtBQUNBSixPQUFPLENBQUMsU0FBRCxDQUFQLEdBQXFCWSxRQUFyQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMud2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24gPSB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbjtcbmV4cG9ydHMud2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZyA9IHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3Npbmc7XG5leHBvcnRzLndoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdCA9IHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdDtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX2JpbmRBY3Rpb25DcmVhdG9ycyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL2JpbmRBY3Rpb25DcmVhdG9yc1wiKSk7XG5cbnZhciBfd3JhcE1hcFRvUHJvcHMgPSByZXF1aXJlKFwiLi93cmFwTWFwVG9Qcm9wc1wiKTtcblxuZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24obWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gKDAsIF93cmFwTWFwVG9Qcm9wcy53cmFwTWFwVG9Qcm9wc0Z1bmMpKG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcERpc3BhdGNoVG9Qcm9wcyA/ICgwLCBfd3JhcE1hcFRvUHJvcHMud3JhcE1hcFRvUHJvcHNDb25zdGFudCkoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaFxuICAgIH07XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3QobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyAoMCwgX3dyYXBNYXBUb1Byb3BzLndyYXBNYXBUb1Byb3BzQ29uc3RhbnQpKGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiAoMCwgX2JpbmRBY3Rpb25DcmVhdG9yc1tcImRlZmF1bHRcIl0pKG1hcERpc3BhdGNoVG9Qcm9wcywgZGlzcGF0Y2gpO1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cblxudmFyIF9kZWZhdWx0ID0gW3doZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3RdO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiXX0=